version: '3'

services:

  ball_rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'ball_rabbitmq'
    restart: on-failure
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - "./.config/rabbitmq/:/etc/ball/amqp/"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=@dministrat0r!

  ### SUPPLIERS ###
  supplier_management_db:
    image: postgres:14-alpine
    container_name: 'supplier_management_db'
    restart: on-failure
    volumes:
      - supplier_management_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=supplier

  supplier_management_service:
    image: ball/supplier_management_service:1.0
    build: supplier-management
    restart: on-failure
    ports:
      - '3000:3000'
    environment:
      - POSTGRES_HOST=supplier_management_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=supplier
      - MQ_URL=amqp://admin:%40dministrat0r%21@ball_rabbitmq:5672
      - MQ_EXCHANGE=ball
    depends_on:
      - ball_rabbitmq
      - supplier_management_db

  ### PRODUCTS ###
  product_management_db:
    image: postgres:14-alpine
    container_name: 'product_management_db'
    restart: on-failure
    volumes:
      - product_management_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=product

  product_management_service:
    image: ball/product_management_service:1.0
    build: product-management
    restart: on-failure
    ports:
      - '3100:3000'
    environment:
      - POSTGRES_HOST=product_management_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=product
      - MQ_URL=amqp://admin:%40dministrat0r%21@ball_rabbitmq:5672
      - MQ_EXCHANGE=ball
    depends_on:
      - ball_rabbitmq
      - product_management_db

  ### CUSTOMERS ###
  customer_management_db:
    image: postgres:14-alpine
    container_name: 'customer_management_db'
    restart: on-failure
    volumes:
      - customer_management_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=customer

  customer_management_service:
    image: ball/customer_management_service:1.0
    build: customer-management
    restart: on-failure
    ports:
      - '3200:3000'
    environment:
      - POSTGRES_HOST=customer_management_db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=@dministrat0r!
      - POSTGRES_DB=customer
      - MQ_URL=amqp://admin:%40dministrat0r%21@ball_rabbitmq:5672
      - MQ_EXCHANGE=ball
    depends_on:
      - ball_rabbitmq
      - customer_management_db

  ### E-MAIL NOTIFICATIONS ###
  mailserver:
    image: maildev/maildev:latest
    container_name: mailserver
    restart: on-failure
    ports:
      - "3300:1080"

  notification_service:
    image: ball/notification_service:1.0
    build: notification-service
    restart: on-failure
    environment:
      - MAIL_HOST=mailserver
      - MAIL_PORT=1025
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - MQ_URL=amqp://admin:%40dministrat0r%21@ball_rabbitmq:5672
      - MQ_EXCHANGE=ball
    depends_on:
      - ball_rabbitmq
      - mailserver

#  ### Logistics Management ###
#  ball_logistics_management_db:
#    image: 'mongo'
#    container_name: 'ball_logistics_management_db'
#    ports:
#      - '27012:27017'
#    volumes:
#      - ./conf/mongod.conf:/etc/mongod.conf
#    command: ["-f", "/etc/mongod.conf"]
#
#  ball_logistics_management_service:
#    build: LogisticsManagementService/.
#    container_name: 'ball_logistics_management_service'
#    ports:
#      - '8082:8080'
#    environment:
#      - MONGO_URL=mongodb://mongo:27012/app_development
#    depends_on:
#      - ball_rabbitmq
#      - ball_logistics_management_db
#
#      ### Order Management ###
#  ball_order_management_db:
#    image: 'mongo'
#    container_name: 'ball_order_management_db'
#    ports:
#      - '27014:27017'
#    volumes:
#      - ./conf/mongod.conf:/etc/mongod.conf
#    command: ["-f", "/etc/mongod.conf"]
#
#  ball_order_management_service:
#    build: OrderManagementService/.
#    container_name: 'ball_order_management_service'
#    ports:
#      - '8084:8080'
#    environment:
#      - MONGO_URL=mongodb://ball_order_management_db:27017/app_development
#      - MQ_URL=amqp://ball_rabbitmq:5672
#    depends_on:
#      - ball_rabbitmq
#      - ball_order_management_db
#
#  ### Order Tracking ###
#  ball_order_tracking_db:
#    image: 'mongo'
#    container_name: 'ball_order_tracking_db'
#    ports:
#      - '27015:27017'
#    volumes:
#      - ./conf/mongod.conf:/etc/mongod.conf
#    command: ["-f", "/etc/mongod.conf"]
#
#  ball_order_tracking_service:
#    build: OrderTrackingService/.
#    container_name: 'ball_order_tracking_service'
#    ports:
#      - '8085:8080'
#    environment:
#      - MONGO_URL=mongodb://mongo:27015/app_development
#    depends_on:
#      - ball_rabbitmq
#      - ball_order_tracking_db
#
#  ### Payment ###
#  ball_payment_db:
#    image: 'mongo'
#    container_name: 'ball_payment_db'
#    ports:
#      - '27016:27017'
#    volumes:
#      - ./conf/mongod.conf:/etc/mongod.conf
#    command: ["-f", "/etc/mongod.conf"]
#
#  ball_payment_service:
#    build: PaymentService/.
#    container_name: 'ball_payment_service'
#    ports:
#      - '8086:8080'
#    environment:
#      - MONGO_URL=mongodb://ball_payment_db:27017/app_development
#      - MQ_URL=amqp://ball_rabbitmq:5672
#    depends_on:
#      - ball_rabbitmq
#      - ball_payment_db
#
#  ### Service Department ###
#  ball_service_department_db:
#    image: 'mongo'
#    container_name: 'ball_service_department_db'
#    ports:
#      - '27018:27017'
#    volumes:
#      - ./conf/mongod.conf:/etc/mongod.conf
#    command: ["-f", "/etc/mongod.conf"]
#
#  ball_service_department_service:
#    build: ServiceDepartmentService/.
#    container_name: 'ball_service_department_service'
#    ports:
#      - '8088:8080'
#    environment:
#      - MONGO_URL=mongodb://mongo:27018/app_development
#    depends_on:
#      - ball_rabbitmq
#      - ball_service_department_db

volumes:
  supplier_management_data:
  product_management_data:
  customer_management_data:
  rabbitmq_data:
